{"pages":[],"posts":[{"title":"Gitblit组件化","text":"1.在Gitblit上创建一个自己的远程私有索引库，用来存放私有框架的podspec文件 创建本地的私有索引库文件夹，并与远程私有索引库进行关联 2.1添加本地私有索引库并与远程私有库 1$ pod repo add IOSMavenSpec http://wy@dnsdk.vimedia.cn:8080/r/IOSMavenSpec.git 2.2 再次查看本地已存在的索引库 1pod repo 3 在Gitblit创建一个用来存放项目基础组件的仓库IOSMaven参见第一步 4 快速创建模板工程(模板来自github) 4.1 快速创建模板测试工程 在/Users/eddy/Desktop/IOSMaven路径下 123 $ cd /Users/eddy/ $ pod lib create KTM-iOS-SDK 4.2 本地验证podspec 1pod lib lint --allow-warnings --use-libraries --verbose 验证不过的话；可以添加–verbose查看详细错误信息 4.3 提交本地代码 12345678$ git status$ git add .$ git commit -m 'first commit'$ git remote add origin '[http://wy@dnsdk.vimedia.cn:8080/r/KTM-iOS-SDK.git](http://wy@dnsdk.vimedia.cn:8080/r/IOSMavenSpec.git') (将本地库与远程代码仓库进行关联)$ git push origin master (提交到远程仓库)$ git tag '0.1.0' (要与IOSMaven.podspec文件中的tag值保持一致)$ git push --tags(将tag提交到远程) 4.4 验证远程是否正确 1pod spec lint --allow-warnings --use-libraries --verbose（验证远程是否正确） 5 将podspec文件提交到本地的私有索引库 1$ pod repo push IOSMavenSpec IOSMaven.podspec --allow-warnings 5 组件化5.1、抽离一个基础组件 123456spec.default_subspecs = 'Common' #默认组件 spec.subspec 'Common' do |ss| ss.ios.deployment_target = '9.0' ss.vendored_frameworks = 'Common/*.framework' end 5.2、模块组件 12345678spec.subspec 'Ads' do |ss| ss.dependency 'KTMSDK/Common' ss.subspec 'ByteDance' do |hl| #头条广告 hl.vendored_frameworks = &quot;Ads/ByteDance/*.framework&quot; hl.resource = &quot;Ads/ByteDance/*.bundle&quot; endend 加载xib资源需要制作bundle 组件化framework加载xib 6 引用远程库 12345678910111213141516171819202122232425262728293031323334353637383940source 'http://wy@dnsdk.vimedia.cn:8080/r/IOSMavenSpec.git' #远程私有库地址source 'https://cdn.cocoapods.org/' #公有库地址platform :ios, '9.0'target 'Unity-iPhone' do sdkVersion='1.0.0'####--Ads---###pod 'KTMSDK/Ads/ByteDance',sdkVersionpod 'Bytedance-UnionAD', '2.8.0.1'pod 'KTMSDK/Ads/IronSource',sdkVersionpod 'KTMSDK/Ads/Admob',sdkVersionpod 'KTMSDK/Ads/GDT',sdkVersionpod 'KTMSDK/Ads/Unity',sdkVersionpod 'KTMSDK/Ads/Mintegral',sdkVersionpod 'KTMSDK/Ads/Facebook',sdkVersionpod 'KTMSDK/Ads/Applovin',sdkVersionpod 'KTMSDK/Ads/KTMAd',sdkVersionpod 'KTMSDK/Ads/Vungle',sdkVersion####--Analysis---###pod 'KTMSDK/Analysis/Umeng',sdkVersionpod 'KTMSDK/Analysis/TrackingIO',sdkVersionpod 'KTMSDK/Analysis/ByteDance',sdkVersionpod 'KTMSDK/Analysis/DataEye',sdkVersionpod 'KTMSDK/Analysis/Appsflyer',sdkVersionpod 'KTMSDK/Analysis/Facebook',sdkVersionpod 'KTMSDK/Analysis/Adjust',sdkVersionpod 'KTMSDK/Analysis/Tenjin',sdkVersionpod 'KTMSDK/Analysis/Google',sdkVersion####--Social---###pod 'KTMSDK/Social/wechat',sdkVersionpod 'KTMSDK/Social/facebook',sdkVersionpod 'KTMSDK/Social/apple',sdkVersion####--Extension---###pod 'KTMSDK/Extension/notice',sdkVersionpod 'KTMSDK/Extension/activity',sdkVersionpod 'KTMSDK/Extension/auth',sdkVersion####--other---###pod 'KTMSDK/Bugly',sdkVersionpod 'KTMSDK/IAP',sdkVersion 注：ironsource聚合广告需单独导入 1234567#IronSource 聚合广告按需添加pod 'IronSourceAdMobAdapter','4.3.10.1'pod 'IronSourceFacebookAdapter','4.3.14.0'pod 'IronSourceUnityAdsAdapter','4.3.0.1'pod 'IronSourceTikTokAdapter','4.1.2.7'pod 'IronSourceAppLovinAdapter','4.3.10.1'pod 'IronSourceMintegralAdapter','4.3.1.0' 遇到问题：1、不能同时存在同一个SDK的不同版本(ironsource聚合中的第三方广告单独pod)2、依赖海外的需要放到本地（比如FBAudienceNetwork），目前有外网是pod方式引入cocopods搭私有库报错- ERROR | [iOS] xcodebuild: Returned an unsuccessful exit code.（库存在多个，比如irons聚合中有unity，单独的unity仅保留一个）","link":"/2021/09/16/Gitblit%E7%BB%84%E4%BB%B6%E5%8C%96/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/09/16/hello-world/"},{"title":"hexo+github搭建博客","text":"环境配置1、安装githttps://git-scm.com/download/mac 1brew install git 2、安装nodejshttps://nodejs.org/en/download/ 3、安装hexo 1npm install hexo -g 安装hexo依赖 1npm install --save hexo-deployer-git 配置sshkey 1ssh-keygen -t rsa -C &quot;邮件地址&quot; 搭建博客hexo基本命令 1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 一、新建本地博客1、新建空文件夹放置博客2、cd到新建目录3、hexo init 执行之后会看到：4、生成html文件 1hexo generate 部署github创建git仓库xxx.github.io 关联到本地博客 1234deploy: type: git repository: git@github.com:xxx/xxx.github.io.git branch: master 遇到问题执行，hexo d报错： ERROR Deployer not found: git 解决方案 这是因为没安装hexo-deployer-git插件，在站点目录下输入下面的插件安装就好了： npm install hexo-deployer-git –save 如果还没解决：设置线sshkey","link":"/2021/09/17/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[],"categories":[]}